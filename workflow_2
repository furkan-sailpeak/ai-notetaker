{
  "name": "AI Meeting Bot Workflow",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "request-bot",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Bot Request Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "request-meeting-bot"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.meeting_url }}",
              "operation": "contains",
              "value2": "meet.google.com"
            },
            {
              "value1": "={{ $json.user_email }}",
              "operation": "contains", 
              "value2": "@sailpeak.com"
            }
          ]
        }
      },
      "id": "validate-request",
      "name": "Validate Request",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openAiApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "gpt-3.5-turbo"
            },
            {
              "name": "messages",
              "value": [
                {
                  "role": "system",
                  "content": "You are a meeting bot coordinator. Generate a session ID and confirmation message."
                },
                {
                  "role": "user", 
                  "content": "Generate a session ID for meeting: {{ $json.meeting_url }} for user: {{ $json.user_email }}"
                }
              ]
            }
          ]
        }
      },
      "id": "generate-session",
      "name": "Generate Session ID", 
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 200]
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": "YOUR_GOOGLE_SHEET_ID",
        "sheetName": "Bot Requests",
        "columnToMatchOn": "Session ID",
        "valuesToSend": {
          "specifyColumns": "defineBelow",
          "columnsToSend": [
            {
              "column": "Timestamp",
              "value": "={{ new Date().toISOString() }}"
            },
            {
              "column": "User Email", 
              "value": "={{ $json.user_email }}"
            },
            {
              "column": "Meeting URL",
              "value": "={{ $json.meeting_url }}"
            },
            {
              "column": "Session ID",
              "value": "session_{{ new Date().getTime() }}"
            },
            {
              "column": "Status",
              "value": "REQUESTED"
            }
          ]
        }
      },
      "id": "log-to-sheets",
      "name": "Log to Google Sheets",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [680, 300]
    },
    {
      "parameters": {
        "fromEmail": "noreply@sailpeak.com",
        "toEmail": "={{ $json.user_email }}",
        "subject": "ðŸ¤– Meeting Bot Requested - {{ $('Log to Google Sheets').item.json['Session ID'] }}",
        "emailType": "html",
        "message": "<!DOCTYPE html>\n<html>\n<head>\n<style>\nbody { font-family: Arial, sans-serif; }\n.header { background: #4285f4; color: white; padding: 20px; text-align: center; }\n.content { padding: 20px; }\n.success { background: #d4edda; color: #155724; padding: 15px; border-radius: 5px; }\n</style>\n</head>\n<body>\n<div class=\"header\">\n<h1>ðŸ¤– AI Meeting Bot</h1>\n<p>Your bot request has been processed!</p>\n</div>\n<div class=\"content\">\n<div class=\"success\">\n<strong>âœ… Success!</strong> Your meeting bot has been requested.\n</div>\n<p><strong>ðŸ“‹ Details:</strong></p>\n<ul>\n<li><strong>Session ID:</strong> {{ $('Log to Google Sheets').item.json['Session ID'] }}</li>\n<li><strong>Meeting:</strong> {{ $json.meeting_url }}</li>\n<li><strong>Requested:</strong> {{ new Date().toLocaleString() }}</li>\n</ul>\n<p><strong>ðŸ¤– What happens next:</strong></p>\n<ol>\n<li>The bot will join your meeting automatically</li>\n<li>It will transcribe the conversation in real-time</li>\n<li>After the meeting, you'll get an enhanced transcript</li>\n<li>Everything will be saved to your Google Drive</li>\n</ol>\n<p>Questions? Just reply to this email!</p>\n<p>Best regards,<br>Sailpeak AI Team</p>\n</div>\n</body>\n</html>"
      },
      "id": "send-email",
      "name": "Send Confirmation Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "ðŸ¤– New meeting bot requested by {{ $json.user_email }} for {{ $json.meeting_url }}"
            },
            {
              "name": "channel", 
              "value": "#meeting-bots"
            }
          ]
        }
      },
      "id": "notify-slack",
      "name": "Notify Slack",
      "type": "n8n-nodes-base.httpRequest", 
      "typeVersion": 4.1,
      "position": [680, 500]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": true,\n  \"session_id\": \"{{ $('Log to Google Sheets').item.json['Session ID'] }}\",\n  \"message\": \"Bot request received! You'll receive an email confirmation shortly.\",\n  \"meeting_url\": \"{{ $json.meeting_url }}\",\n  \"user_email\": \"{{ $json.user_email }}\"\n}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"error\": \"Invalid request. Please provide a valid Google Meet URL and Sailpeak email address.\"\n}",
        "responseCode": 400
      },
      "id": "error-response",
      "name": "Error Response", 
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 600]
    }
  ],
  "connections": {
    "Bot Request Webhook": {
      "main": [
        [
          {
            "node": "Validate Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Request": {
      "main": [
        [
          {
            "node": "Generate Session ID",
            "type": "main", 
            "index": 0
          },
          {
            "node": "Log to Google Sheets",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Google Sheets": {
      "main": [
        [
          {
            "node": "Send Confirmation Email",
            "type": "main",
            "index": 0
          },
          {
            "node": "Notify Slack", 
            "type": "main",
            "index": 0
          },
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "createdAt": "2024-01-20T10:00:00.000Z",
  "updatedAt": "2024-01-20T10:00:00.000Z",
  "id": "ai-meeting-bot-workflow"
}
